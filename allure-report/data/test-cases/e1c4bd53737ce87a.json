{"uid":"e1c4bd53737ce87a","name":"Verify that creating an author with existing ID is not allowed","fullName":"com.avenga.yablonskyi.tests.authors.AuthorsEdgeCasesTest.checkCreateAuthorWithExistingId","historyId":"bdcd7de6f4bfc73346b1b23a3402dc60","time":{"start":1753807944540,"stop":1753807944713,"duration":173},"description":"Ensure that POST /Authors returns an error when trying to create an author with an existing ID.","descriptionHtml":"<p>Ensure that POST /Authors returns an error when trying to create an author with an existing ID.</p>\n","status":"failed","statusMessage":"[Actual Status Code 200 is not in - [400, 403, 406, 409]] \nExpecting int[]:\n  [400, 403, 406, 409]\nto contain:\n  [200]\nbut could not find the following int(s):\n  [200]\n","statusTrace":"java.lang.AssertionError: [Actual Status Code 200 is not in - [400, 403, 406, 409]] \nExpecting int[]:\n  [400, 403, 406, 409]\nto contain:\n  [200]\nbut could not find the following int(s):\n  [200]\n\n\tat com.avenga.yablonskyi.http.response.ResponseVerifier.isStatusCodeIn(ResponseVerifier.java:45)\n\tat com.avenga.yablonskyi.tests.authors.AuthorsEdgeCasesTest.checkCreateAuthorWithExistingId(AuthorsEdgeCasesTest.java:81)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)\n\tat org.testng.internal.invokers.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:47)\n\tat org.testng.internal.invokers.InvokeMethodRunnable.call(InvokeMethodRunnable.java:76)\n\tat org.testng.internal.invokers.InvokeMethodRunnable.call(InvokeMethodRunnable.java:11)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)\n\tat java.base/java.lang.Thread.run(Thread.java:1583)\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"setUp","time":{"start":1753807942853,"stop":1753807942855,"duration":2},"description":"","status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Ensure that POST /Authors returns an error when trying to create an author with an existing ID.","status":"failed","statusMessage":"[Actual Status Code 200 is not in - [400, 403, 406, 409]] \nExpecting int[]:\n  [400, 403, 406, 409]\nto contain:\n  [200]\nbut could not find the following int(s):\n  [200]\n","statusTrace":"java.lang.AssertionError: [Actual Status Code 200 is not in - [400, 403, 406, 409]] \nExpecting int[]:\n  [400, 403, 406, 409]\nto contain:\n  [200]\nbut could not find the following int(s):\n  [200]\n\n\tat com.avenga.yablonskyi.http.response.ResponseVerifier.isStatusCodeIn(ResponseVerifier.java:45)\n\tat com.avenga.yablonskyi.tests.authors.AuthorsEdgeCasesTest.checkCreateAuthorWithExistingId(AuthorsEdgeCasesTest.java:81)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)\n\tat org.testng.internal.invokers.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:47)\n\tat org.testng.internal.invokers.InvokeMethodRunnable.call(InvokeMethodRunnable.java:76)\n\tat org.testng.internal.invokers.InvokeMethodRunnable.call(InvokeMethodRunnable.java:11)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)\n\tat java.base/java.lang.Thread.run(Thread.java:1583)\n","steps":[{"name":"Creating new author: AuthorPojo(id=70, idBook=60, firstName=First Name 70, lastName=Last Name 70)","time":{"start":1753807944541,"stop":1753807944541,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Sending POST request to: https://fakerestapi.azurewebsites.net/api/v1/Authors","time":{"start":1753807944541,"stop":1753807944541,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Verify that Response status code is in [400, 403, 406, 409]","time":{"start":1753807944711,"stop":1753807944711,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"package","value":"com.avenga.yablonskyi.tests.authors.AuthorsEdgeCasesTest"},{"name":"testClass","value":"com.avenga.yablonskyi.tests.authors.AuthorsEdgeCasesTest"},{"name":"testMethod","value":"checkCreateAuthorWithExistingId"},{"name":"parentSuite","value":"Books and Authors API Automation Suite"},{"name":"suite","value":"Authors API Tests"},{"name":"subSuite","value":"com.avenga.yablonskyi.tests.authors.AuthorsEdgeCasesTest"},{"name":"host","value":"volodymyr-pc"},{"name":"thread","value":"46683@volodymyr-pc.TestNG-tests-1(51)"},{"name":"framework","value":"testng"},{"name":"language","value":"java"},{"name":"feature","value":"Authors API Edge Cases"},{"name":"epic","value":"Authors API"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"e1c4bd53737ce87a.json","parameterValues":[]}